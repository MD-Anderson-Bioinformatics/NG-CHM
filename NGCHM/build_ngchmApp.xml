<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="build_ngchm_all" basedir = "." name="Create a minimize javascript file for the widgetizer (ngchmWidget-min.js) AND the stand-alone Viewer (ngChmApp.html) file">

	<!-- Set variables for execution -->
	<property name="src.dir" value="mda.ngchm.util."/>
	<property name="web.dir" value="./WebContent/"/>
	<property name="server.app.dir" value="${web.dir}server.app/"/>
	<property name="js.dir" value="${web.dir}javascript/"/>
	<property name="dir.jarfile" value="./WebContent/WEB-INF/lib"/>
	<property name="java.dir" value="./src/mda/ngchm/util/"/>
	<property name="closure.jar" value="${dir.jarfile}/closure-compiler-v20230802.jar"/>
	<property environment="env"/>

	<!-- Execute a Javascript miminizer to generate a minified custom-min.js file -->
	<target name="minimize_custom_js">
	<apply executable="java" parallel="false" failonerror="true">
	    <fileset dir="${js.dir}" includes="custom/custom.js"/>
	    <arg line="-jar"/>
	    <arg value="${closure.jar}"/>
	    <srcfile/>
		<arg line="--js_output_file"/>
	    <mapper type="glob" from="*.js" to="${js.dir}*-min.js"/>
	    <targetfile/>
	</apply>
	</target>  
		
	<!-- Build all JAVA class files -->
	<target name="classfiles">
	    <mkdir dir="build/classes"/>
	    <javac srcdir="${java.dir}" destdir="build/classes" debug="true" debuglevel="lines,vars,source" failonerror="true"/>
	</target>

	<!-- Execute the JAVA NGCHM_Minimizer to combine all JS files into a single ngchm.js file -->
	<target name="create_combined_js" depends="classfiles,minimize_custom_js">
	<java classname="${src.dir}NGCHM_Minimizer" failonerror="true">
	    <arg value="${web.dir}"/>
	    <arg value="ngchm.js"/>
	    <classpath>
	        <pathelement path="build/classes"/>
	    </classpath>
	</java>
	</target>
	
	<!-- Execute a Javascript miminizer to generate a minified ngchm-min.js file -->
	<target name="minify_js" depends="create_combined_js">
        <apply executable="java" parallel="false" failonerror="true">
            <fileset dir="${js.dir}" includes="ngchm.js"/>
            <arg line="-jar"/>
            <arg value="${closure.jar}"/>
            <srcfile/>
            <arg line="--compilation_level"/>
            <arg line="SIMPLE_OPTIMIZATIONS"/>
            <arg line="--jscomp_off"/>
            <arg line="uselessCode"/>
            <arg line="--js_output_file"/>
            <mapper type="glob" from="*.js" to="${js.dir}*-min.js"/>
            <targetfile/>
        </apply>
	</target>  
	
	<!-- Execute a Javascript miminizer to generate a minified ngchmEmbed-min.js file -->
	<target name="minify_embedder_js">
	<apply executable="java" parallel="false" failonerror="true">
	    <fileset dir="${js.dir}" includes="NGCHM_Embed.js"/>
	    <arg line="-jar"/>
	    <arg value="${closure.jar}"/>
	    <srcfile/>
	    <arg line="--js_output_file"/>
	    <mapper type="glob" from="*.js" to="ngchmEmbed-min.js"/>
	    <targetfile/>
	</apply>
	<echo file="ngchmEmbed-min.js" append="true">/* commit hash: ${env.GIT_COMMIT} */${line.separator} </echo>
	<echo file="ngchmEmbed-min.js" append="true">/* build tag: ${env.GIT_LATEST_TAG} */${line.separator}</echo>
	</target>  

	<!-- Execute the JAVA NGCHM_AppGenerator to create the stand-alone viewer ngChmApp.html file -->
	<target name="create_app_html" depends="classfiles,minify_js"> 
	<java classname="${src.dir}NGCHM_AppGenerator" failonerror="true">
	    <arg value="${web.dir}"/>
	    <arg value="ngChmApp.html"/>
	    <classpath>
	        <pathelement path="build/classes"/>
	    </classpath>
	</java>
	</target>
	
	<!-- Execute the JAVA NGCHM_ServerAppGenerator to create the server viewer ngChmServer directory -->
	<target name="create_server_app_dir" depends="classfiles,minify_js">
	<java classname="${src.dir}NGCHM_ServerAppGenerator" failonerror="true">
	    <arg value="${web.dir}"/>
	    <arg value="${server.app.dir}"/>
	    <arg value="${closure.jar}"/>
	    <classpath>
	        <pathelement path="build/classes"/>
	    </classpath>
	</java>
	</target>

	<!-- Execute the JAVA NGCHM_Widgetizer to create the ngchmWidget-min.js NG-CHM Widget file -->
	<target name="create_widget_js" depends="classfiles,minify_js,minify_embedder_js">
	<java classname="${src.dir}NGCHM_Widgetizer" failonerror="true">
	    <arg value="${web.dir}"/>
	    <arg value="ngchmWidget-min.js"/>
	    <arg value="file"/>
	    <classpath>
	        <pathelement path="build/classes"/>
	    </classpath>
	</java>
	<echo file="ngchmWidget-min.js" append="true">/* commit hash: ${env.GIT_COMMIT} */${line.separator}</echo>
	<echo file="ngchmWidget-min.js" append="true">/* build tag: ${env.GIT_LATEST_TAG} */${line.separator}</echo>
	</target>

	<!-- Target to call the steps to build just the ngChmApp.html stand-alone viewer file -->
	<!-- It will delete any by-product JS files that are no longer needed -->
	<target name="build_ngchm_app" depends="create_app_html,create_server_app_dir">
	<delete>
	    <fileset dir="${js.dir}" includes="ngchm.js"/>
            <fileset dir="${js.dir}" includes="ngchm-min.js"/>
            <fileset dir="${js.dir}" includes="custom/custom-min.js"/>
	</delete>
	</target>
	
	<!-- Target to call the steps to build just the ngchmWidget-min.js NG-CHM Widget file -->
	<!-- It will delete any by-product JS files that are no longer needed -->
	<target name="build_ngchm_widget" depends="create_widget_js">
	<delete>
	    <fileset dir="${js.dir}" includes="ngchm.js"/>
            <fileset dir="${js.dir}" includes="ngchm-min.js"/>
            <fileset dir="${js.dir}" includes="custom/custom-min.js"/>
	</delete>
	</target>

	<!-- Target to call the steps to build all NG-CHM components generated by this ANT script -->
	<!-- It will delete any by-product JS files that are no longer needed -->
	<target name="build_ngchm_all" depends="create_server_app_dir,create_app_html,create_widget_js">
	<delete>
	    <fileset dir="${js.dir}" includes="ngchm.js"/>
            <fileset dir="${js.dir}" includes="ngchm-min.js"/>
            <fileset dir="${js.dir}" includes="custom/custom-min.js"/>
	</delete>
	</target>

</project>
